buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.3'
    }
}

apply plugin: 'com.android.library'

// Function to determine if new architecture is enabled
def isNewArchitectureEnabled() {
    return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

android {
    compileSdkVersion 31

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 31
        versionCode 1
        versionName '3.20.3'
        consumerProguardFiles 'proguard-rules.pro'
        
        buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
    }
    
    buildTypes {
        release {
            minifyEnabled false
        }
    }
    
    sourceSets {
        main {
            java {
                if (isNewArchitectureEnabled()) {
                    srcDirs += ['src/newarch/java']
                } else {
                    srcDirs += ['src/oldarch/java']
                }
            }
        }
    }
    
    lintOptions {
        abortOnError false
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    configurations.all {
        resolutionStrategy {
            force 'androidx.core:core:1.6.0'
            force 'androidx.core:core-ktx:1.6.0'
        }
    }
}

repositories {
    mavenCentral()
    google()
    maven {
        // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
        url "$rootDir/../node_modules/react-native/android"
    }
}

dependencies {
    implementation 'com.facebook.react:react-native:+'
    implementation 'io.radar:sdk:3.21.3'
    
    if (isNewArchitectureEnabled()) {
        implementation "com.facebook.react:react-android"
        implementation "com.facebook.react:turbomodule-core"
    }
}

